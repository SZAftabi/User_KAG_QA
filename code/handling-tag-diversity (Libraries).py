# -*- coding: utf-8 -*-
"""Hnadling-Tag-Diversity (Libraries).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JAsqIxKRWMw2WAAYy2UQLkqqlnkiNmQn
"""

!git clone -q https://github.com/rapidsai/rapidsai-csp-utils.git                   # Fast t-SNE
!python rapidsai-csp-utils/colab/pip-install.py
!pip install -q gensim
!pip install -q node2vec
!pip install -q networkx
!pip install -q scikit-learn-extra
!pip install -q transformers

import os
import time
import cudf
import cuml
import copy
import random
import pickle
import gensim
import numpy as np
import pandas as pd
import networkx as nx
import plotly.io as pio
import plotly.express as px
import matplotlib.pyplot as plt
import gensim.downloader as api
import plotly.graph_objects as go
import matplotlib.pyplot as plt


cuml.__version__
from textblob import Word
from node2vec import Node2Vec
from cuml.manifold import TSNE
from collections import Counter
from collections import OrderedDict
from scipy.spatial.distance import cdist
from sklearn_extra.cluster import KMedoids
from sklearn.cluster import AgglomerativeClustering
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from itertools import repeat
from sentence_transformers import SentenceTransformer


from scipy.cluster.hierarchy import (
    dendrogram,
    linkage,
    fcluster
    )
from sklearn.metrics import (
    silhouette_score,
    davies_bouldin_score,
    calinski_harabasz_score
    )
from sklearn.metrics import (
    accuracy_score,
    f1_score,
    precision_score,
    recall_score,
    precision_recall_fscore_support
    )
from transformers import (
    BertModel,
    AutoModel,
    BertTokenizer,
    AutoTokenizer
    )

import torch
torch.cuda.is_available()

import nltk
nltk.download('wordnet')
nltk.download('punkt')
from nltk.corpus import wordnet

!pip install -q git+https://github.com/VenkateshwaranB/stellargraph.git
import stellargraph as sg
from stellargraph.data import EdgeSplitter
from stellargraph.mapper import GraphSAGELinkGenerator
from stellargraph.mapper import GraphSAGENodeGenerator
from stellargraph.layer import GraphSAGE, link_classification
from stellargraph.data import UniformRandomWalk
from stellargraph.data import BiasedRandomWalk
from stellargraph.mapper import Node2VecLinkGenerator, Node2VecNodeGenerator
from stellargraph.layer import Node2Vec, link_classification
from stellargraph import globalvar
from stellargraph import StellarGraph

import tensorflow as tf
from tensorflow import keras